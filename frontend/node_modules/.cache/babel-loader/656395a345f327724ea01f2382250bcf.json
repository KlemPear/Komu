{"ast":null,"code":"var _jsxFileName = \"/home/clem/Git/Komu/frontend/src/components/Messages/Messages.js\";\nimport React from \"react\";\nimport \"./Messages.css\";\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport Chat from \"./Chat/Chat\";\nimport { connect } from \"react-redux\";\nimport { fetchChannels } from \"../../actions\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Messages extends React.Component {\n  componentDidMount() {\n    this.props.fetchChannels();\n  }\n\n  selectedChannel() {\n    if (this.props.selectedChannelId) {\n      return _.filter(this.props.channels, {\n        id: this.props.selectedChannelId\n      })[0];\n    } else return null;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-body\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Chat, {\n          selectedChannel: this.selectedChannel()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    channels: Object.values(state.channels),\n    selectedChannelId: state.selectedChannel.id\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchChannels\n})(Messages);","map":{"version":3,"sources":["/home/clem/Git/Komu/frontend/src/components/Messages/Messages.js"],"names":["React","Sidebar","Chat","connect","fetchChannels","_","Messages","Component","componentDidMount","props","selectedChannel","selectedChannelId","filter","channels","id","render","mapStateToProps","state","Object","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,OAAOC,CAAP,MAAc,QAAd;;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AACtCC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,KAAL,CAAWL,aAAX;AACA;;AAEDM,EAAAA,eAAe,GAAG;AACjB,QAAI,KAAKD,KAAL,CAAWE,iBAAf,EAAkC;AACjC,aAAON,CAAC,CAACO,MAAF,CAAS,KAAKH,KAAL,CAAWI,QAApB,EAA8B;AACpCC,QAAAA,EAAE,EAAE,KAAKL,KAAL,CAAWE;AADqB,OAA9B,EAEJ,CAFI,CAAP;AAGA,KAJD,MAIO,OAAO,IAAP;AACP;;AAEDI,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,IAAD;AAAM,UAAA,eAAe,EAAE,KAAKL,eAAL;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAQA;;AAtBqC;;AAyBvC,MAAMM,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACNJ,IAAAA,QAAQ,EAAEK,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACJ,QAApB,CADJ;AAENF,IAAAA,iBAAiB,EAAEM,KAAK,CAACP,eAAN,CAAsBI;AAFnC,GAAP;AAIA,CALD;;AAOA,eAAeX,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAA4CE,QAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport \"./Messages.css\";\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport Chat from \"./Chat/Chat\";\nimport { connect } from \"react-redux\";\nimport { fetchChannels } from \"../../actions\";\nimport _ from \"lodash\";\n\nclass Messages extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.fetchChannels();\n\t}\n\n\tselectedChannel() {\n\t\tif (this.props.selectedChannelId) {\n\t\t\treturn _.filter(this.props.channels, {\n\t\t\t\tid: this.props.selectedChannelId,\n\t\t\t})[0];\n\t\t} else return null;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"app-body\">\n\t\t\t\t\t<Sidebar />\n\t\t\t\t\t<Chat selectedChannel={this.selectedChannel()} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tchannels: Object.values(state.channels),\n\t\tselectedChannelId: state.selectedChannel.id,\n\t};\n};\n\nexport default connect(mapStateToProps, { fetchChannels })(Messages);\n"]},"metadata":{},"sourceType":"module"}