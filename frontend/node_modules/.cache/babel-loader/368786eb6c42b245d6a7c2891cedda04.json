{"ast":null,"code":"import { CREATE_CHANNEL, EDIT_CHANNEL, FETCH_CHANNEL, FETCH_CHANNELS, DELETE_CHANNEL } from \"../actions/types\";\nimport _ from \"lodash\";\n\nconst channelReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_CHANNELS:\n      return { ...state,\n        ..._.mapKeys(action.payload, \"id\")\n      };\n\n    case FETCH_CHANNEL:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case CREATE_CHANNEL:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_CHANNEL:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_CHANNEL:\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default channelReducer;","map":{"version":3,"sources":["/home/clem/Git/Komu/frontend/src/reducers/channelReducer.js"],"names":["CREATE_CHANNEL","EDIT_CHANNEL","FETCH_CHANNEL","FETCH_CHANNELS","DELETE_CHANNEL","_","channelReducer","state","action","type","mapKeys","payload","id","omit"],"mappings":"AAAA,SACCA,cADD,EAECC,YAFD,EAGCC,aAHD,EAICC,cAJD,EAKCC,cALD,QAMO,kBANP;AAOA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKN,cAAL;AACC,aAAO,EAAE,GAAGI,KAAL;AAAY,WAAGF,CAAC,CAACK,OAAF,CAAUF,MAAM,CAACG,OAAjB,EAA0B,IAA1B;AAAf,OAAP;;AACD,SAAKT,aAAL;AACC,aAAO,EAAE,GAAGK,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACD,SAAKX,cAAL;AACC,aAAO,EAAE,GAAGO,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACD,SAAKV,YAAL;AACC,aAAO,EAAE,GAAGM,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACD,SAAKP,cAAL;AACC,aAAOC,CAAC,CAACQ,IAAF,CAAON,KAAP,EAAcC,MAAM,CAACG,OAArB,CAAP;;AACD;AACC,aAAOJ,KAAP;AAZF;AAcA,CAfD;;AAiBA,eAAeD,cAAf","sourcesContent":["import {\n\tCREATE_CHANNEL,\n\tEDIT_CHANNEL,\n\tFETCH_CHANNEL,\n\tFETCH_CHANNELS,\n\tDELETE_CHANNEL,\n} from \"../actions/types\";\nimport _ from \"lodash\";\n\nconst channelReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase FETCH_CHANNELS:\n\t\t\treturn { ...state, ..._.mapKeys(action.payload, \"id\") };\n\t\tcase FETCH_CHANNEL:\n\t\t\treturn { ...state, [action.payload.id]: action.payload };\n\t\tcase CREATE_CHANNEL:\n\t\t\treturn { ...state, [action.payload.id]: action.payload };\n\t\tcase EDIT_CHANNEL:\n\t\t\treturn { ...state, [action.payload.id]: action.payload };\n\t\tcase DELETE_CHANNEL:\n\t\t\treturn _.omit(state, action.payload);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default channelReducer;\n\n\n"]},"metadata":{},"sourceType":"module"}