{"ast":null,"code":"var _jsxFileName = \"/home/clem/Git/Komu/frontend/src/components/Messages/Chat/Chat.js\";\nimport React from \"react\";\nimport \"./Chat.css\";\nimport StarBorderOutlineIcon from \"@mui/icons-material/StarBorderOutlined\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\nimport Message from \"../Message/Message\";\nimport ChatInput from \"./ChatInput/ChatInput\";\nimport { connect } from \"react-redux\";\nimport { fetchMessages } from \"../../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentChannelId: null\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.selectedChannel) {\n      this.props.fetchMessages(this.props.selectedChannel.id);\n      this.setState({\n        currentChannelId: this.props.selectedChannel.id\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.selectedChannel && this.props.selectedChannel.id !== this.state.currentChannelId) {\n      this.props.fetchMessages(this.props.selectedChannel.id);\n      this.setState({\n        currentChannelId: this.props.selectedChannel.id\n      });\n    }\n  }\n\n  renderMessages() {\n    return this.props.messages.map(({\n      message,\n      timestamp,\n      user,\n      userImage,\n      id\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Message, {\n        message: message,\n        timestamp: timestamp,\n        user: user,\n        userImage: userImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this));\n  }\n\n  renderChatRoom() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-headerLeft\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"chat-channelName\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"#\", this.props.selectedChannel.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(StarBorderOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-headerRight\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(InfoOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 8\n            }, this), \" Details\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: this.props.messages ? this.renderMessages() : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        channelName: this.props.selectedChannel.title,\n        channelId: this.props.selectedChannel.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this);\n  }\n\n  render() {\n    if (!this.props.selectedChannel) {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a channel to start chatting!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderChatRoom()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  var _state$selectedChanne;\n\n  return {\n    messages: Object.values(state.messages),\n    selectedChannelId: (_state$selectedChanne = state.selectedChannelId) === null || _state$selectedChanne === void 0 ? void 0 : _state$selectedChanne.id\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchMessages\n})(Chat);","map":{"version":3,"sources":["/home/clem/Git/Komu/frontend/src/components/Messages/Chat/Chat.js"],"names":["React","StarBorderOutlineIcon","InfoOutlinedIcon","Message","ChatInput","connect","fetchMessages","Chat","Component","constructor","props","state","currentChannelId","componentDidMount","selectedChannel","id","setState","componentDidUpdate","renderMessages","messages","map","message","timestamp","user","userImage","renderChatRoom","title","render","mapStateToProps","Object","values","selectedChannelId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Chat.css\";\nimport StarBorderOutlineIcon from \"@mui/icons-material/StarBorderOutlined\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\nimport Message from \"../Message/Message\";\nimport ChatInput from \"./ChatInput/ChatInput\";\nimport { connect } from \"react-redux\";\nimport { fetchMessages } from \"../../../actions\";\n\nclass Chat extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { currentChannelId: null };\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.selectedChannel) {\n\t\t\tthis.props.fetchMessages(this.props.selectedChannel.id);\n\t\t\tthis.setState({ currentChannelId: this.props.selectedChannel.id });\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (\n\t\t\tthis.props.selectedChannel &&\n\t\t\tthis.props.selectedChannel.id !== this.state.currentChannelId\n\t\t) {\n\t\t\tthis.props.fetchMessages(this.props.selectedChannel.id);\n\t\t\tthis.setState({ currentChannelId: this.props.selectedChannel.id });\n\t\t}\n\t}\n\n\trenderMessages() {\n\t\treturn this.props.messages.map(\n\t\t\t({ message, timestamp, user, userImage, id }) => (\n\t\t\t\t<div key={id}>\n\t\t\t\t\t<Message\n\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\ttimestamp={timestamp}\n\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\tuserImage={userImage}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t);\n\t}\n\n\trenderChatRoom() {\n\t\treturn (\n\t\t\t<div className=\"chat\">\n\t\t\t\t<div className=\"chat-header\">\n\t\t\t\t\t<div className=\"chat-headerLeft\">\n\t\t\t\t\t\t<h4 className=\"chat-channelName\">\n\t\t\t\t\t\t\t<strong>#{this.props.selectedChannel.title}</strong>\n\t\t\t\t\t\t\t<StarBorderOutlineIcon />\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"chat-headerRight\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<InfoOutlinedIcon /> Details\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"chat-messages\">\n\t\t\t\t\t{this.props.messages ? this.renderMessages() : null}\n\t\t\t\t</div>\n\t\t\t\t<ChatInput\n\t\t\t\t\tchannelName={this.props.selectedChannel.title}\n\t\t\t\t\tchannelId={this.props.selectedChannel.id}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tif (!this.props.selectedChannel) {\n\t\t\treturn <h3>Select a channel to start chatting!</h3>;\n\t\t}\n\t\treturn <div>{this.renderChatRoom()}</div>;\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tmessages: Object.values(state.messages),\n\t\tselectedChannelId: state.selectedChannelId?.id,\n\t};\n};\n\nexport default connect(mapStateToProps, { fetchMessages })(Chat);\n"]},"metadata":{},"sourceType":"module"}